(define (exp b n)
   (define (exp-itr b n c)
     (define (square n)
       (* n n))
     (if (not (= n 1))
	 (cond ((even? n) (exp-itr (square b) (/ n 2) c))
	       (else (exp-itr (square b) (/ (- n 1) 2) (* c b))))
	 (* b c)))
   (exp-itr b n 1))
(exp 1024 5)
